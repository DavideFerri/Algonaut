# Environment Configuration Example
# Copy this file to .env and update with your actual values

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Environment type (dev, staging, production)
PUBLIC_ENV=dev

# Debug mode (true/false)
DEBUG=false

# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# =============================================================================
# GITHUB TOKEN (Required for Docker build and API access)
# =============================================================================

# GitHub Personal Access Token - needed for:
# 1. Docker build process (TAMARIX_GITHUB_TOKEN)
# 2. Jira-to-PR automation (repository access and PR creation)
# Token should have: repo, workflow, write:packages, read:packages scopes
GITHUB_TOKEN=ghp_your_github_personal_access_token_here

# =============================================================================
# JIRA CONFIGURATION (Required for Jira-to-PR automation)
# =============================================================================

# Jira instance URL (without trailing slash)
JIRA_URL=https://your-company.atlassian.net

# Jira user email
JIRA_EMAIL=your-email@company.com

# Jira API token (generate from: https://id.atlassian.com/manage-profile/security/api-tokens)
JIRA_API_TOKEN=your_jira_api_token_here

# Jira project key (e.g., DEV, PROJ, TEAM)
JIRA_PROJECT_KEY=DEV

# Optional: Jira board name filter
JIRA_BOARD_NAME=Development Board

# =============================================================================
# GITHUB CONFIGURATION (For Jira-to-PR automation)
# =============================================================================

# GitHub organization name (if working with org repos)
GITHUB_ORG=your-organization

# GitHub username (if working with personal repos)
GITHUB_USER=your-username

# =============================================================================
# AI/LLM API KEYS (Required for automation)
# =============================================================================

# OpenAI API key - required for repository analysis and decision making
OPENAI_API_KEY=sk-your_openai_api_key_here

# OpenAI model to use (gpt-4o, gpt-4-turbo, gpt-3.5-turbo)
OPENAI_MODEL=gpt-4o

# OpenAI temperature (0.0 for deterministic, 1.0 for creative)
OPENAI_TEMPERATURE=0.0

# Anthropic API key - optional, for enhanced Claude Code SDK integration
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here

# Claude model to use
CLAUDE_MODEL=claude-3-sonnet-20240229

# =============================================================================
# WORKFLOW CONFIGURATION (Optional - defaults provided)
# =============================================================================

# Maximum number of tickets to process per automation run
MAX_TICKETS_PER_RUN=5

# Maximum repositories to analyze per ticket
MAX_REPOS_PER_TICKET=3

# Require human review for complex changes (true/false)
REQUIRE_HUMAN_REVIEW=true

# Run in dry-run mode - no actual changes made (true/false)
DRY_RUN=false

# Git branch prefix for automated branches
BRANCH_PREFIX=feature/jira-

# Automatically assign PRs to ticket reporter (true/false)
AUTO_ASSIGN_PR=false

# Require tests for new features (true/false)
REQUIRE_TESTS=true

# =============================================================================
# SECURITY CONFIGURATION (Optional - defaults provided)
# =============================================================================

# Maximum file size in MB for code generation
MAX_FILE_SIZE_MB=10

# Maximum number of files that can be changed per ticket
MAX_FILES_CHANGED=20

# Maximum lines of code that can be changed per ticket
MAX_LINES_CHANGED=1000

# Allowed file extensions for code generation (comma-separated)
ALLOWED_FILE_EXTENSIONS=.py,.js,.ts,.java,.go,.rs,.cpp,.h,.hpp,.cs

# Forbidden file paths (comma-separated)
FORBIDDEN_PATHS=/etc/,/usr/,/bin/,/sbin/,/root/,.env,.secret

# =============================================================================
# STORAGE CONFIGURATION (Optional - defaults provided)
# =============================================================================

# Workspace directory for temporary files
WORKSPACE_DIR=/tmp/jira-to-pr

# Directory for cloned repositories
REPOS_DIR=/tmp/repos

# Cache directory
CACHE_DIR=/tmp/cache

# Log directory
LOG_DIR=/tmp/logs

# Cache TTL in hours
CACHE_TTL_HOURS=24

# Clean up temporary files on exit (true/false)
CLEANUP_ON_EXIT=true

# =============================================================================
# APPLICATION-SPECIFIC SETTINGS
# =============================================================================

# Python path (for containerized environments)
PYTHONPATH=/usr/app

# Add any other application-specific environment variables here
# that are used by your existing categorisation or other modules

# =============================================================================
# OPTIONAL CLIENT CONFIGURATION
# =============================================================================

# If you have client-specific settings, add them here
# These would go in .env.client for the client service

# =============================================================================
# GETTING YOUR API KEYS
# =============================================================================

# GitHub Token:
# 1. Go to: https://github.com/settings/tokens
# 2. Generate new token (classic)
# 3. Select scopes: repo, workflow, write:packages, read:packages
# 4. Copy the token to GITHUB_TOKEN above

# Jira API Token:
# 1. Go to: https://id.atlassian.com/manage-profile/security/api-tokens
# 2. Create API token
# 3. Copy the token to JIRA_API_TOKEN above

# OpenAI API Key:
# 1. Go to: https://platform.openai.com/api-keys
# 2. Create new secret key
# 3. Copy the key to OPENAI_API_KEY above

# Anthropic API Key (optional):
# 1. Go to: https://console.anthropic.com/
# 2. Create API key
# 3. Copy the key to ANTHROPIC_API_KEY above

# =============================================================================
# VALIDATION
# =============================================================================

# After setting up your .env file, validate the configuration:
# python -m src.lib.jira_to_pr.main --setup