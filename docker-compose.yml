version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        TAMARIX_GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: app
    ports:
      - "2024:2024"
    env_file:
      - .env
    environment:
      - PUBLIC_ENV=dev
      - PYTHONPATH=/usr/app
    volumes:
      - ./src:/usr/app/src
      - ./.env:/usr/app/.env
      # Persistent volumes for jira-to-pr automation
      - jira_repos:/tmp/repos
      - jira_cache:/tmp/cache
      - jira_logs:/tmp/logs
    networks:
      - network
    profiles:
      - dev

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: client
    ports:
      - "8501:8501"
    env_file:
      - .env.client
    environment:
      - PUBLIC_ENV=dev
    volumes:
      - ./client:/usr/app
      - ./.env.client:/usr/app/.env.client
    networks:
      - network
    restart: on-failure
    depends_on:
      - app
    profiles:
      - dev

  # Jira-to-PR automation service (optional standalone service)
  jira-to-pr:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        TAMARIX_GITHUB_TOKEN: ${GITHUB_TOKEN}
    container_name: jira-to-pr
    env_file:
      - .env
    environment:
      - PUBLIC_ENV=dev
      - PYTHONPATH=/usr/app
    volumes:
      - ./src:/usr/app/src:ro
      - ./.env:/usr/app/.env:ro
      # Persistent volumes for automation data
      - jira_repos:/tmp/repos
      - jira_cache:/tmp/cache
      - jira_logs:/tmp/logs
    networks:
      - network
    # Override the default command to run jira-to-pr automation
    command: python -m src.lib.jira_to_pr.main --max-tickets ${MAX_TICKETS_PER_RUN:-5}
    profiles:
      - automation
    depends_on:
      - app

networks:
  network:
    driver: bridge

# Persistent volumes for jira-to-pr automation data
volumes:
  jira_repos:
    driver: local
  jira_cache:
    driver: local
  jira_logs:
    driver: local